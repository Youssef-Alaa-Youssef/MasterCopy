@model Factory.PL.ViewModels.Permission.SubModulesViewModel

@{
    ViewData["Title"] = "Create SubModule";
    Layout = "_LogedUser";
}

<div class="container-fluid card shadow-sm p-3">
    @await Html.PartialAsync("ErrorSummaryPartial")
    @await Html.PartialAsync("_PageTitle")


    <form asp-action="Create" method="post">
        <div class="row g-3">
            <div class="col-md-6">
                <div class="form-group">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label asp-for="Controller" class="control-label"></label>
                    <input asp-for="Controller" class="form-control" />
                    <span asp-validation-for="Controller" class="text-danger"></span>
                </div>
            </div>
        </div>

        <div class="row g-3 mt-2">
            <div class="col-md-6">
                <div class="form-group">
                    <label asp-for="Action" class="control-label"></label>
                    <input asp-for="Action" class="form-control" />
                    <span asp-validation-for="Action" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label asp-for="Title" class="control-label"></label>
                    <input asp-for="Title" class="form-control" />
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>
            </div>
        </div>

        <div class="row g-3 mt-2">
            <div class="col-md-12">
                <div class="form-group">
                    <label asp-for="ModuleId" class="control-label"></label>
                    <select asp-for="ModuleId" class="form-control" asp-items="Model.Modules">
                        <option value="">-- Select Module --</option>
                    </select>
                    <span asp-validation-for="ModuleId" class="text-danger"></span>
                </div>
            </div>
        </div>
        <div class="col-md-4 form-group">
        <label asp-for="IconClass" class="control-label"></label>
        <div class="input-group">
            <select asp-for="IconClass" class="form-control" id="iconSelect">
            </select>
            <span class="input-group-text" id="iconPreview">
                <i class="bi bi-question-circle"></i>
            </span>
        </div>
        <span asp-validation-for="IconClass" class="text-danger"></span>
</div>
        <div class="card-footer text-center mt-2">
            <input type="submit" value="Create" class="btn btn-outline-primary" />
            <a asp-action="Index" class="btn btn-secondary">Back to List</a>
        </div>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const icons = [
                "bi-stack","bi-chevron-down","bi-dash", "bi-check", "bi-heart", "bi-star", "bi-gear", "bi-house",
                "bi-person", "bi-envelope", "bi-trash", "bi-search", "bi-arrow-left",
                "bi-arrow-right", "bi-plus", "bi-minus", "bi-x", "bi-list", "bi-grid",
                "bi-bookmark", "bi-calendar", "bi-clock", "bi-cloud", "bi-download",
                "bi-upload", "bi-pencil", "bi-save", "bi-lock", "bi-unlock", "bi-eye",
                "bi-eye-slash", "bi-camera", "bi-image", "bi-music", "bi-film", "bi-mic",
                "bi-volume-up", "bi-volume-mute", "bi-phone", "bi-link", "bi-share",
                "bi-copy", "bi-printer"
            ];

            const selectElement = document.getElementById("iconSelect");
            const iconPreview = document.getElementById("iconPreview");

            icons.forEach(icon => {
                const option = document.createElement("option");
                option.value = `bi ${icon}`;
                option.textContent = icon.replace("bi-", "");
                selectElement.appendChild(option);
            });

            selectElement.addEventListener("change", function () {
                const selectedIcon = this.value;
                iconPreview.innerHTML = `<i class="${selectedIcon}"></i>`;
            });

            if (icons.length > 0) {
                iconPreview.innerHTML = `<i class="bi ${icons[0]}"></i>`;
            }
        });
    </script>
}
