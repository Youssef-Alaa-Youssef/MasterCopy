@{
    ViewData["Title"] = "Stores Report";
    Layout = "_LogedUser";
}

<div class="container-fluid card shadow-sm p-3">
    @await Html.PartialAsync("ErrorSummaryPartial")
    @await Html.PartialAsync("_PageTitle")

    <!-- Dropdowns for Warehouse and Category -->
    <div class="row mb-4">
        <div class="col-md-6">
            <div class="form-group">
                <label for="warehouseDropdown">Select Stores</label>
                <select id="warehouseDropdown" class="form-control">
                    <option value="">-- Select Store --</option>
                    @if (ViewBag.Warehouses != null)
                    {
                        @foreach (var warehouse in ViewBag.Warehouses as IEnumerable<SelectListItem>)
                        {
                            <option value="@warehouse.Value">@warehouse.Text</option>
                        }
                    }
                </select>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label for="categoryDropdown">Select Category</label>
                <select id="categoryDropdown" class="form-control" disabled>
                    <option value="">-- Select Category --</option>
                </select>
            </div>
        </div>
    </div>
    @* @if (ViewBag.Show != null){ *@
    <div class="row mb-2">
        <div class="col-md-6">
            <div class="card ">
                <div class="card-header ">
                    <h5 class="card-title mb-0">Total Items</h5>
                </div>
                <div class="card-body">
                    <dl class="row">
                        <dt class="col-sm-4">Total Count</dt>
                        <dd class="col-sm-8" id="totalItems">0</dd>
                    </dl>
                </div>
            </div>
        </div>

        <!-- Low Stock Items Card -->
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">Low Stock Items</h5>
                </div>
                <div class="card-body">
                    <dl class="row">
                        <dt class="col-sm-4">Low Stock Count</dt>
                        <dd class="col-sm-8" id="lowStockItems">0</dd>
                    </dl>
                </div>
            </div>
        </div>
    </div>

        <div class="row mb-4">
       
        <div class="table-responsive">
        <table class="table table-bordered table-striped" id="itemsTable">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Code Number</th>
                    <th>Name (EN)</th>
                    <th>Name (AR)</th>
                    <th>Unit Price</th>
                    <th>Current Stock</th>
                    <th>Status</th>
                </tr>
            </thead>
            <tbody>
                <!-- Items will be populated here dynamically -->
            </tbody>
        </table>
    </div>
    @* } *@
</div>

@section Scripts {
<script>
            document.addEventListener("DOMContentLoaded", function () {
            const warehouseDropdown = document.getElementById('warehouseDropdown');
            const categoryDropdown = document.getElementById('categoryDropdown');

            warehouseDropdown.addEventListener('change', function () {
                const warehouseId = warehouseDropdown.value;

                if (warehouseId) {

                    const queryParams = new URLSearchParams();
                    queryParams.append('id', warehouseId);

                    fetch('/Category/GetCategories?' + queryParams.toString(), {
                        method: 'GET',  
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        categoryDropdown.innerHTML = '<option value="">-- Select Category --</option>';
                        data.forEach(category => {
                            const option = document.createElement('option');
                            option.value = category.id;
                            option.textContent = category.nameEn;
                            categoryDropdown.appendChild(option);
                        });
                        categoryDropdown.disabled = false;
                    })
                    .catch(error => {

                    });
                } else {
                    categoryDropdown.innerHTML = '<option value="">-- Select Category --</option>';
                    categoryDropdown.disabled = true;
                }
            });

            categoryDropdown.addEventListener('change', function () {
                const categoryId = categoryDropdown.value;
                if (categoryId) {
                    const queryParams = new URLSearchParams();
                    queryParams.append('Id', categoryId);

                    fetch('/Items/GetItems?' + queryParams.toString(), {
                        method: 'GET',  
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        document.getElementById('totalItems').textContent = data.insights.totalItems;
                        document.getElementById('lowStockItems').textContent = data.insights.lowStockItems;

                        const tableBody = document.querySelector('#itemsTable tbody');
                        tableBody.innerHTML = '';
                        data.items.forEach((item, index) => {
                            const row = document.createElement('tr');
                            row.innerHTML = `
                                <td>${index + 1}</td>
                                <td>${item.codeNumber}</td>
                                <td>${item.nameEn}</td>
                                <td>${item.nameAr}</td>
                                <td>${item.unitPrice}</td>
                                <td>${item.currentStock}</td>
                                <td>${item.isLowStock ? '<span class="badge bg-danger">Low Stock</span>' : '<span class="badge bg-success">In Stock</span>'}</td>
                            `;
                            tableBody.appendChild(row);
                        });
                    })
                    .catch(error => {
                    });
                } else {
                    const tableBody = document.querySelector('#itemsTable tbody');
                    tableBody.innerHTML = '';
                    document.getElementById('totalItems').textContent = '0';
                    document.getElementById('lowStockItems').textContent = '0';
                }
            });
        });

</script>

}