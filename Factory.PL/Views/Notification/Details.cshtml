@model Factory.DAL.Models.Notifications.Notification
@{
    ViewData["Title"] = Localizer["Notification Details"].Value;
    Layout = "_LogedUser";
}

<div class="container-fluid card shadow-sm p-3">
    @await Html.PartialAsync("ErrorSummaryPartial")
    @await Html.PartialAsync("_PageTitle")

    <div class="card">
        <div class="card-body">
            <h5 class="card-title">@Model.Message</h5>
            <h4 class="card-title">@Model.Description</h4>
            <p class="card-text">
                <strong>@Localizer["Type"]:</strong> <span class="badge bg-@Model.Type.ToLower()">@Model.Type</span>
            </p>
            <p class="card-text">
                <strong>@Localizer["Icon"]:</strong> <i class="@Model.IconClass"></i>
            </p>
            <p class="card-text">
                <strong>@Localizer["Created At"]:</strong> @Model.CreatedAt.ToString("g")
            </p>
            <p class="card-text">
                <strong>@Localizer["Status"]:</strong>
                <span id="statusBadge" class="badge @(Model.IsRead ? "bg-success" : "bg-warning")">
                    @(Model.IsRead ? Localizer["Read"] : Localizer["Unread"])
                </span>
            </p>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const notificationId = @Model.Id;

            fetch(`/api/notification/MarkAsRead/${notificationId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(response => {
                if (response.ok) {
                    const statusBadge = document.getElementById('statusBadge');

                    if (statusBadge) {
                        statusBadge.textContent = '@Localizer["Read"]';
                        statusBadge.classList.remove('bg-warning');
                        statusBadge.classList.add('bg-success');
                    }
                } else {
                    console.error('@Localizer["Failed to mark notification as read"]');
                }
            })
            .catch(error => {
                console.error('@Localizer["Error marking notification as read"]:', error);
            });
        });
    </script>
}