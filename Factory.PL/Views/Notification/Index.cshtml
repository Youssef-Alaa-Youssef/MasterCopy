@model List<Factory.DAL.Models.Notifications.Notification>
@{
    ViewData["Title"] = "Notifications";
    Layout = "_LogedUser";
}

<div class="container-fluid card shadow-sm p-3">
    @await Html.PartialAsync("ErrorSummaryPartial")
    @await Html.PartialAsync("_PageTitle")

    <div class="mb-4">
        <a asp-controller="Notification" asp-action="Add" class="btn btn-outline-success">
            <i class="bi bi-plus-circle me-2"></i>Add New Notification
        </a>
    </div>

    @if (Model == null || !Model.Any())
    {
        <div class="alert alert-info" role="alert">
            <i class="bi bi-info-circle me-2"></i> No notifications available at the moment.
        </div>
    }
    else
    {
        <div class="mb-4">
            <input type="text" class="form-control" id="searchInput" placeholder="Search notifications..." aria-label="Search">
        </div>

        <div class="table-responsive">
            <table class="table table-bordered table-striped table-hover">
                <thead class="thead-dark">
                    <tr>
                        <th>#</th>
                        <th>Message</th>
                        <th>Description</th>
                        <th>Type</th>
                        <th>Icon</th>
                        <th>Created At</th>
                        <th>User</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Count; i++)
                    {
                        var notification = Model[i];
                        <tr>
                            <td>@(i + 1)</td>
                            <td>@notification.Message</td>
                            <td>@notification.Description</td>
                            <td>
                                <span class="badge bg-@notification.Type.ToLower()">
                                    @notification.Type
                                </span>
                            </td>
                            <td>
                                <i class="@notification.IconClass"></i>
                            </td>
                            <td>@notification.CreatedAt.ToString("g")</td>
                            <td>@notification.UserId</td>
                            <td>
                                @if (notification.IsRead)
                                {
                                    <span class="badge bg-success"><i class="bi bi-check-circle me-1"></i>Read</span>
                                }
                                else
                                {
                                    <span class="badge bg-warning"><i class="bi bi-exclamation-circle me-1"></i>Unread</span>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        document.getElementById('searchInput')?.addEventListener('input', function () {
            const searchTerm = this.value.toLowerCase();
            const rows = document.querySelectorAll('.table tbody tr');

            rows.forEach(row => {
                const message = row.querySelector('td:nth-child(2)').textContent.toLowerCase();
                const type = row.querySelector('td:nth-child(4)').textContent.toLowerCase();
                const status = row.querySelector('td:nth-child(8)').textContent.toLowerCase();

                if (message.includes(searchTerm) || type.includes(searchTerm) || status.includes(searchTerm)) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        });
    </script>
}