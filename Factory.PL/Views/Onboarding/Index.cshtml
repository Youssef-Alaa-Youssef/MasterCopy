@model IEnumerable<Factory.DAL.Models.HR.Onboarding>

@{
    ViewData["Title"] = "Onboarding Index";
    Layout = "_LogedUser";
}

<div class="container-fluid card shadow-sm p-3">
    @await Html.PartialAsync("ErrorSummaryPartial")
    @await Html.PartialAsync("_PageTitle")

    <div class="chart-container" style="width: 50%; margin: auto;">
        <canvas id="onboardingChart"></canvas>
    </div>
    <div class="col-md-3 mb-2">
        <a asp-action="Create" class="btn btn-outline-primary">Create New</a>
    </div>
    <table class="table">
        <thead>
            <tr>
                <th>Start Date</th>
                <th>Expected Completion Date</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Any())
            {
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@item.StartDate.ToShortDateString()</td>
                        <td>@item.ExpectedCompletionDate.ToShortDateString()</td>
                        <td>@item.Status</td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="3" class="text-center">No onboarding data available.</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script src="~/lib/chart.js/chart.min.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var ctx = document.getElementById('onboardingChart').getContext('2d');
        var onboardingChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['Not Started', 'In Progress', 'Completed'],
                datasets: [{
                    label: 'Onboarding Status',
                    data: [@ViewBag.NotStartedCount, @ViewBag.InProgressCount, @ViewBag.CompletedCount],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    });
</script>